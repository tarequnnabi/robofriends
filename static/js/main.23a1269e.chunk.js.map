{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","container/App.js","reportWebVitals.js","index.js"],"names":["card","name","email","id","className","alt","src","CardList","robots","map","user","i","Card","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filterRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAeeA,EAbF,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,KAAKC,EAAY,EAAZA,MAAMC,EAAM,EAANA,GACxB,OACE,sBAAKC,UAAW,sDAAhB,UACE,qBAAKC,IAAI,QAAQC,IAAG,+BAA4BH,KAChD,gCACE,mCAAMF,EAAN,OACA,kCAAKC,EAAL,cCgBOK,EArBE,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACf,OACI,8BAEYA,EAAOC,KAAI,SAACC,EAAMC,GAClB,OACA,cAACC,EAAD,CAEAT,GAAMK,EAAOG,GAAGR,GACfF,KAAQO,EAAOG,GAAGV,KACnBC,MAASM,EAAOG,GAAGT,OAHdS,SCMVE,EAdG,SAAC,GAA8B,EAA7BC,YAA8B,IAAjBC,EAAgB,EAAhBA,aAC7B,OACI,qBAAKX,UAAY,MAAjB,SACI,uBACAA,UAAU,mCACVY,KAAO,SACPC,YAAY,gBACZC,SAAUH,OCCPI,G,MARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAU,SAASC,OAAO,kBAAkBC,OAAO,SAAhE,SACKJ,EAAMK,aC4CJC,E,kDAzCX,aAAc,IAAD,8BACT,gBAcJC,eAAe,SAACC,GACZ,EAAKC,SAAS,CAACf,YAAYc,EAAME,OAAOC,SAdxC,EAAKC,MAAM,CACPxB,OAAO,GACPM,YAAY,IAJP,E,gEASO,IAAD,OACfmB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAG,EAAKR,SAAS,CAACrB,OAAO6B,S,+BAQ/B,IAAD,EAC2BC,KAAKN,MAA5BxB,EADJ,EACIA,OAAQM,EADZ,EACYA,YACVyB,EAAe/B,EAAOgC,QAAO,SAAAC,GAC/B,OAAOA,EAAMxC,KAAKyC,cAAcC,SAAS7B,EAAY4B,kBAExD,OAAQlC,EAAOoC,OAGR,sBAAKxC,UAAU,KAAf,UACK,oBAAIA,UAAU,KAAd,yBACD,cAAC,EAAD,CAAWW,aAAcuB,KAAKX,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUnB,OAAQ+B,SAN9B,6C,GA3BMM,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,SAMhDX,M","file":"static/js/main.23a1269e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst card = ({name,email,id})=>{\r\n  return (\r\n    <div className= 'tc bg-light-green dib br3 pa3 mr2 grow bw2 shadow-5'>\r\n      <img alt='robot' src = {`https://robohash.org/${id}`}/>\r\n      <div>\r\n        <h2> {name} </h2>\r\n        <p> {email} </p>\r\n      </div>\r\n    </div>\r\n  \r\n\r\n  );\r\n}\r\nexport default card;","import React from 'react';\r\nimport Card from './Card'\r\n\r\nconst CardList = ({robots})=>{\r\n    return(\r\n        <div>\r\n            {\r\n                    robots.map((user, i)=>{\r\n                    return (\r\n                    <Card \r\n                    key={i}\r\n                    id = {robots[i].id}\r\n                     name = {robots[i].name}\r\n                    email = {robots[i].email}\r\n                    />\r\n        \r\n                );\r\n            })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange})=>{\r\n    return(\r\n        <div className = 'pa2'>\r\n            <input \r\n            className='pa3 ba b--green bg-lightest-blue'\r\n            type = 'search'\r\n            placeholder='search robots'\r\n            onChange={searchChange}\r\n\r\n            />\r\n        </div>\r\n        \r\n    );\r\n}\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props)=>{\r\n    return (\r\n        <div style={{overflowY:\"scroll\",border:\"5px solid black\",height:\"800px\"}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React,{Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll'\r\n\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            robots:[],\r\n            searchfield:''\r\n\r\n        }\r\n\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=> response.json())\r\n        .then(users=> this.setState({robots:users}));\r\n        \r\n    }\r\n    onSearchChange=(event)=>{\r\n        this.setState({searchfield:event.target.value})\r\n    }\r\n\r\n\r\n    render(){\r\n        const { robots, searchfield }= this.state;\r\n        const filterRobots = robots.filter(robot=>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n         })\r\n         return !robots.length?\r\n            <h1>Loading</h1>:\r\n        \r\n                <div className='tc'>\r\n                     <h1 className=\"f1\">Robofriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <CardList robots={filterRobots} />\r\n                    </Scroll>\r\n        \r\n                </div>\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(<App />,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}